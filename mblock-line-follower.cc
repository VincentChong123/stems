// generated by mBlock5 for mBot
// codes make you happy

#include <MeMCore.h>
#include <Arduino.h>
#include <Wire.h>
#include <SoftwareSerial.h>

MeRGBLed rgbled_7(7, 2);
MeLineFollower linefollower_2(2);
MeDCMotor motor_9(9);
MeDCMotor motor_10(10);

float power = 0;
float pturn = 0;
float time = 0;
float pedal_time = 0;
float steering_time = 0;

void move(int direction, int speed) {
  int leftSpeed = 0;
  int rightSpeed = 0;
  if(direction == 1) {
    leftSpeed = speed;
    rightSpeed = speed;
  } else if(direction == 2) {
    leftSpeed = -speed;
    rightSpeed = -speed;
  } else if(direction == 3) {
    leftSpeed = -speed;
    rightSpeed = speed;
  } else if(direction == 4) {
    leftSpeed = speed;
    rightSpeed = -speed;
  }
  motor_9.run((9) == M1 ? -(leftSpeed) : (leftSpeed));
  motor_10.run((10) == M1 ? -(rightSpeed) : (rightSpeed));
}

void _delay(float seconds) {
  long endTime = millis() + seconds * 1000;
  while(millis() < endTime) _loop();
}

void setup() {
  rgbled_7.fillPixelsBak(0, 2, 1);
  pinMode(A7, INPUT);

  rgbled_7.setColor(0,255,0,0);
  rgbled_7.show();
  _delay(1);
  rgbled_7.setColor(0,0,0,0);
  rgbled_7.show();

  rgbled_7.setColor(0,0,0,0);
  rgbled_7.show();
  while(!((0 ^ (analogRead(A7) > 10 ? 0 : 1))))
  {
    _loop();
  }
  power = 35;
  pturn = 30;
  pedal_time = 0.3;
  steering_time = 0.2;
  while(1) {
      if((0 ? (3 == 0 ? linefollower_2.readSensors() == 0 :
      (linefollower_2.readSensors() & 3) == 3) :
      (3 == 0 ? linefollower_2.readSensors() == 3 :
      (linefollower_2.readSensors() & 3) == 0))){

          move(1, power / 100.0 * 255);
          _delay(pedal_time);
          move(1, 0);

          rgbled_7.setColor(0,0,255,119);
          rgbled_7.show();
          _delay(0.01);
          rgbled_7.setColor(0,0,0,0);
          rgbled_7.show();

      }else{
          if((1 ? (3 == 0 ? linefollower_2.readSensors() == 0 :
          (linefollower_2.readSensors() & 3) == 3) :
          (3 == 0 ? linefollower_2.readSensors() == 3 :
          (linefollower_2.readSensors() & 3) == 0))){

              move(2, power / 100.0 * 255);
              _delay(0.1);
              move(2, 0);

              rgbled_7.setColor(0,255,0,0);
              rgbled_7.show();
              _delay(0.01);
              rgbled_7.setColor(0,0,0,0);
              rgbled_7.show();

          }else{
              if((1 ? (2 == 0 ? linefollower_2.readSensors() == 0 :
              (linefollower_2.readSensors() & 2) == 2) :
              (2 == 0 ? linefollower_2.readSensors() == 3 :
              (linefollower_2.readSensors() & 2) == 0))){

                  move(4, pturn / 100.0 * 255);
                  _delay(steering_time);
                  move(4, 0);

                  rgbled_7.setColor(2,255,0,0);
                  rgbled_7.show();
                  _delay(0.01);
                  rgbled_7.setColor(2,0,0,0);
                  rgbled_7.show();

              }else{

                  move(3, pturn / 100.0 * 255);
                  _delay(steering_time);
                  move(3, 0);

                  rgbled_7.setColor(1,255,0,0);
                  rgbled_7.show();
                  _delay(0.01);
                  rgbled_7.setColor(1,0,0,0);
                  rgbled_7.show();

              }

          }

      }

      rgbled_7.setColor(0,0,0,0);
      rgbled_7.show();

      _loop();
  }

}

void _loop() {
}

void loop() {
  _loop();
}

